{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/style/postHead.module.css","webpack:///./node_modules/gatsby-theme-yoshino/src/templates/style/post.module.css","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/style/drag.module.css","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/postHead/style/postInfo.module.css","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/postHead/postInfo/time.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/postHead/postInfo.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/postHead.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/components/post/postNav.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/components/global/drag.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/templates/post.jsx","webpack:///./node_modules/gatsby-theme-yoshino/src/components/post/comment/disqus.js","webpack:///./node_modules/gatsby-theme-yoshino/src/components/post/comment.jsx"],"names":["module","exports","dateToString","date","time","Date","getFullYear","getMonth","getDate","Time","props","update","Fragment","src","dateTime","itemProp","PostInfo","url","useStaticQuery","site","siteMetadata","info","timeToRead","tags","className","PostInfoStyle","postInfo","map","tag","index","key","to","undefined","PostHead","title","PostHeadStyle","JSON","stringify","PostNav","navHtml","dangerouslySetInnerHTML","__html","drag","children","style","clickRef","useRef","moveRef","useState","dragging","setDragging","x","y","refXY","setRefXY","moveXY","setMoveXY","useEffect","onMouseDown","e","clickElem","current","moveElem","target","moveElemRect","getBoundingClientRect","clientX","left","clientY","top","handleMouseDown","document","addEventListener","removeEventListener","onMouseMove","handleMouseMove","onMouseUp","handleMouseUp","window","ReactDOM","createPortal","ref","DragStyle","Object","assign","padding","body","propTypes","PropTypes","string","object","node","Post","data","markdownRemark","frontmatter","excerpt","html","initPostNav","destroyPostNav","PostStyle","postCard","name","content","property","post","addTitleId","addLazyLoadImg","comment","postTitle","elementId","loadDisqusJs","siteId","errorCallback","a","d","s","createElement","async","onerror","setAttribute","head","appendChild","showError","getElementById","innerHTML","console","warn","reset","DISQUS","reload","config","page","location","href","identifier","pathname","load","disqus_config","this","accessDisqus","destroy","Comment","commentConfig","type","id","commentIndex"],"mappings":"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","file":"component---node-modules-gatsby-theme-yoshino-src-templates-post-jsx-de42a2bbec776d1c44ef.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"postHead-module--title--3fWEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"post-module--post-card--3ARqb\",\"post\":\"post-module--post--1-c9o\",\"comment\":\"post-module--comment--3SSEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drag\":\"drag-module--drag--1QpYq\",\"title\":\"drag-module--title--2a-Z6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postInfo\":\"postInfo-module--post-info--M_SKV\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"../../icon\";\r\n\r\nfunction dateToString(date) {\r\n    const time = new Date( date );\r\n    const y = time.getFullYear();\r\n    const m = time.getMonth() + 1;\r\n    const d = time.getDate();\r\n    return `${y}-${m}-${d}`;\r\n}\r\n\r\nexport default function Time(props) {\r\n    const { date, update } = props.time;\r\n    return (\r\n        <React.Fragment>\r\n            <span>\r\n                <Icon src='/md/today' />{\" 发表于 \"}\r\n                <time dateTime={ date } itemProp=\"dateCreated datePublished\">{ dateToString(date) }</time>\r\n            </span>|\r\n\r\n            {update && \r\n                <span>\r\n                    <Icon src='/md/update' />{\" 更新于 \"}\r\n                    <time dateTime={ update } itemProp=\"dateModified\">{ dateToString(update) }</time>\r\n                </span>\r\n            }\r\n\r\n            {update && \"|\"}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTime.propTypes = {\r\n    time: PropTypes.shape({\r\n        date: PropTypes.string,\r\n        update: PropTypes.string\r\n    }) \r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\nimport Time from \"./postInfo/time\";\r\nimport PostInfoStyle from \"./style/postInfo.module.css\";\r\n\r\nexport default function PostInfo(props) {\r\n    const { site: { siteMetadata: { url } } } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        url\r\n                    }\r\n                }\r\n            }`\r\n    );\r\n\r\n    const { date, update, timeToRead, tags } = props.info;\r\n\r\n    function renderTagLinks() {\r\n        if (tags == null) { return \"null\"; }\r\n        return tags.map(\r\n            (tag, index) => (\r\n                <React.Fragment key={ tag }>\r\n                    <Link to={`${ url }/tag/${ tag }`}>{ tag }</Link> \r\n                    { tags[index + 1] === undefined ? \"\" : \", \" }\r\n                </React.Fragment>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={ PostInfoStyle.postInfo }>\r\n            <Time time={ { date, update } } />\r\n            <span>{ `预计阅读时长: ${timeToRead} 分钟` }</span>\r\n            |<span>{ \"标签: \" } { renderTagLinks() }</span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPostInfo.propTypes = {\r\n    info: PropTypes.shape({\r\n        date: PropTypes.string.isRequired,\r\n        update: PropTypes.string,\r\n        timeToRead: PropTypes.number.isRequired,\r\n        tags: PropTypes.arrayOf(PropTypes.string),\r\n    })\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostHeadStyle from \"./style/postHead.module.css\";\r\nimport PostInfo from \"./postHead/postInfo\";\r\n\r\nexport default function PostHead(props) {\r\n    const { title, ...info } = props.info;\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={ PostHeadStyle.title } >{ title }</h2>\r\n            { JSON.stringify(info) !== \"{}\"  && <PostInfo info={ info } />}\r\n        </div>\r\n    );\r\n}\r\n\r\nPostHead.propTypes = {\r\n    info: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        date: PropTypes.string,\r\n        update: PropTypes.string,\r\n        timeToRead: PropTypes.number,\r\n        tags: PropTypes.arrayOf(PropTypes.string),\r\n    })\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style/postNav.module.css\";\r\n\r\nexport default function PostNav(props) {\r\n    const { navHtml } = props;\r\n\r\n    return (\r\n        <div className={ \"toc-wrap\" }>\r\n            <ol\r\n                className={\"nav\"}\r\n                dangerouslySetInnerHTML={ { __html: navHtml } }\r\n            ></ol>\r\n        </div>);\r\n}\r\n\r\nPostNav.propTypes = {\r\n    navHtml: PropTypes.string\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport DragStyle from \"./style/drag.module.css\";\r\n\r\nfunction handleMouseDown(e, clickRef, moveRef, setDragging, setRefXY) {\r\n    const clickElem = clickRef.current;\r\n    const moveElem = moveRef.current;\r\n\r\n    if (e.target == clickElem) {\r\n        const refXY = {};\r\n        const moveElemRect = moveElem.getBoundingClientRect();\r\n        refXY.x = e.clientX - moveElemRect.left;\r\n        refXY.y = e.clientY - moveElemRect.top;\r\n        //console.log(`${moveElemRect.left}  ${ moveElemRect.top }`);\r\n        //console.log(refXY);\r\n        //console.log(refXY);\r\n        setRefXY(refXY);\r\n        setDragging(true);\r\n    }\r\n\r\n}\r\n\r\nfunction handleMouseMove(e, dragging, refXY, setMoveXY) {\r\n    if (dragging) {\r\n        const moveXY = {};\r\n        moveXY.x = e.clientX - refXY.x;\r\n        moveXY.y = e.clientY - refXY.y;\r\n        //console.log(\"move  client\");\r\n        //console.log(moveXY);\r\n        //console.log({x:e.clientX, y: e.clientY});\r\n        setMoveXY(moveXY);\r\n    }\r\n}\r\n\r\nfunction handleMouseUp(setDragging) {\r\n    setDragging(false);\r\n}\r\n\r\nexport default function drag(props) {\r\n    const { children, style, title } = props;\r\n    const clickRef = useRef(null);\r\n    const moveRef = useRef(null);\r\n\r\n    const [dragging, setDragging] = useState(false);\r\n    const [refXY, setRefXY] = useState({ x: 0, y: 0 });\r\n    const [moveXY, setMoveXY] = useState({ x: undefined, y: undefined });\r\n\r\n    useEffect(() => {\r\n        const onMouseDown = (e) => handleMouseDown(e, clickRef, moveRef, setDragging, setRefXY);\r\n        document.addEventListener(\"mousedown\", onMouseDown);\r\n\r\n        return () => document.removeEventListener(\"mousedown\", onMouseDown);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const onMouseMove = (e) => handleMouseMove(e, dragging, refXY, setMoveXY);\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        return () => document.removeEventListener(\"mousemove\", onMouseMove);\r\n    }, [dragging]);\r\n\r\n    useEffect(() => {\r\n        const onMouseUp = () => handleMouseUp(setDragging);\r\n        document.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n        return () => document.removeEventListener(\"mouseup\", onMouseUp);\r\n    }, []);\r\n\r\n    const portal = typeof window !== \"undefined\"\r\n        ? ReactDOM.createPortal((\r\n            <div\r\n                ref={ moveRef }\r\n                className={ DragStyle.drag }\r\n                style={ Object.assign({}, { left: moveXY.x, top: moveXY.y, padding: \"8px\" }, style) }\r\n            >\r\n                <div ref={ clickRef } className={ DragStyle.title } >{ title }</div>\r\n                <div className={ \"divider\" }></div>\r\n                { children }\r\n            </div>), document.body)\r\n        : \"\";\r\n\r\n    return portal;\r\n}\r\n\r\ndrag.propTypes = {\r\n    title: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n};","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostStyle from \"./style/post.module.css\";\nimport PostHead from \"components/global/postHead\";\nimport PostNav from \"components/post/postNav\";\nimport Comment from \"components/post/comment\";\nimport Drag from \"components/global/drag\";\nimport Seo from \"components/global/seo\";\nimport { addLazyLoadImg, addTitleId } from \"../global\";\nimport { graphql } from \"gatsby\";\n\nexport default function Post(props) {\n    const {\n        markdownRemark: {\n            frontmatter,\n            timeToRead,\n            excerpt,\n            navHtml,\n            html\n        }\n    } = props.data;\n\n    frontmatter.timeToRead = timeToRead;\n\n    useEffect(() => {\n        window.initPostNav();\n        return () => window.destroyPostNav();\n    });\n\n    return (\n        <div className={ PostStyle.postCard }>\n            <Seo title={ frontmatter.title } >\n                <meta name=\"description\" content={ excerpt } />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:description\" content={ excerpt } />\n            </Seo>\n\n\n            <div className={ PostStyle.post }>\n                <PostHead info={ frontmatter } />\n                { navHtml != null &&\n                        <Drag title={ \"文章目录\" }>\n                            <PostNav navHtml={ navHtml } />\n                        </Drag>\n                }\n                <div className={ \"post-body\" } dangerouslySetInnerHTML={ { __html: addTitleId(addLazyLoadImg(html)) } }></div>\n            </div>\n\n\n            <div className={ PostStyle.comment }>\n                <Comment postTitle={ frontmatter.title } />\n            </div>\n        </div>\n    );\n}\n\nPost.propTypes = {\n    data: PropTypes.object\n};\n\nexport const query = graphql`\n    query postQuery($id: String!) {\n        markdownRemark(id: {eq: $id}) {\n            frontmatter {\n                date\n                tags\n                title\n                update\n            }\n            timeToRead\n            navHtml\n            excerpt\n            html\n        }\n    }\n`;\n","export const elementId = \"disqus_thread\";\r\n\r\nasync function loadDisqusJs(siteId, errorCallback) {\r\n    const d = document, s = d.createElement(\"script\");\r\n    s.src = `//${siteId}.disqus.com/embed.js`;\r\n    s.async = true;\r\n    s.onerror = errorCallback;\r\n    s.setAttribute(\"data-timestamp\", + new Date());\r\n    (d.head || d.body).appendChild(s);\r\n}\r\n\r\nasync function showError() {\r\n    try {\r\n        const disqusDom = document.getElementById(elementId);\r\n        disqusDom.innerHTML = \"Disqus加载失败, 请检查您的地区是否支持Disqus\";\r\n    } catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\nfunction reset(title) {\r\n    document.getElementById(elementId).innerHTML = \"\";\r\n\r\n    window.DISQUS.reset({\r\n        reload: true,\r\n        config: () => {\r\n            this.page.url = window.location.href;\r\n            this.page.identifier = window.location.pathname;\r\n            this.page.title = title;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function load(siteId, title) {\r\n\r\n    window.disqus_config = function () {\r\n        this.page.url = window.location.href;\r\n        this.page.identifier = window.location.pathname;\r\n        this.page.title = title;\r\n    };\r\n\r\n    if (window.DISQUS === undefined) {\r\n        window.accessDisqus = true;\r\n        loadDisqusJs(siteId, (e) => {\r\n            showError();\r\n            window.DISQUS = false;\r\n            window.accessDisqus = false;\r\n            console.warn(e);\r\n        });\r\n    } else {\r\n\r\n        if (!window.accessDisqus) {\r\n            showError();\r\n            return false;\r\n        }\r\n\r\n        reset(title);\r\n\r\n    }\r\n}\r\n\r\nexport function destroy() { }\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport * as commentIndex from \"./comment/index\";\r\n\r\nexport default function Comment(props) {\r\n    const { site: { siteMetadata: { comment: commentConfig } } } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        comment {\r\n                            type\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }`\r\n    );\r\n\r\n    const { postTitle } = props;\r\n    const { type, id: siteId } = commentConfig;\r\n    const comment = commentIndex[type];\r\n    if ( comment === undefined ) { return `error: no found ${type}`;}\r\n    \r\n    useEffect(() => {\r\n        comment.load(siteId, postTitle);\r\n        return comment.destroy;\r\n    }, []);\r\n\r\n    return (\r\n        <div id={comment.elementId}>\r\n            <div> loading...</div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nComment.propTypes = { \r\n    postTitle: PropTypes.string\r\n};\r\n"],"sourceRoot":""}