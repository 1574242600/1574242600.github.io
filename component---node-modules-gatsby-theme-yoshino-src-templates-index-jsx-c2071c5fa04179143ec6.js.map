{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-yoshino/src/templates/index.jsx"],"names":["Home","renderPostItem","data","id","other","key","render","this","props","edges","allMarkdownRemark","description","site","siteMetadata","pageContext","className","IndexStyle","index","title","humanPageNumber","undefined","name","content","map","postData","node","total","numberOfPages","limit","current","pageSize","pagination","onChange","navigate","React","Component"],"mappings":"iQAQqBA,E,0GAEjBC,eAAA,SAAeC,GAAO,IACVC,EAAiBD,EAAjBC,GAAOC,EADE,YACQF,EADR,QAGjB,OAAO,wBAAIG,IAAMF,GAAK,kBAAC,IAAD,CAAUD,KAAOE,M,EAG3CE,OAAA,WAAU,IAAD,SAaDC,KAAKC,MAbJ,IAEDN,KAEQO,EAJP,EAGGC,kBACID,MAIIE,EARX,EAMGC,KACIC,aACIF,YAIZG,EAZC,EAYDA,YAGJ,OACI,yBAAKC,UAAYC,IAAWC,OACxB,kBAAC,IAAD,CACIC,MACoC,IAAhCJ,EAAYK,qBACNC,EADN,IAEUN,EAAYK,gBAFtB,KAKJ,0BAAME,KAAK,cAAcC,QAAUX,KAGvC,4BACMF,EAAMc,KAAI,SAACC,GAAD,OAAc,EAAKvB,eAAeuB,EAASC,UAE3D,kBAAC,IAAD,CACIC,MAAQZ,EAAYa,cAAgBb,EAAYc,MAChDC,QAAUf,EAAYK,gBACtBW,SAAWhB,EAAYc,MACvBb,UAAYC,IAAWe,WACvBC,SAAW,SAACH,GACQ,IAAZA,EAKJI,YAAS,SAASJ,GAJdI,YAAS,U,GA7CHC,IAAMC","file":"component---node-modules-gatsby-theme-yoshino-src-templates-index-jsx-c2071c5fa04179143ec6.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, navigate } from \"gatsby\";\r\nimport Pagination from \"yoshino/lib/Pagination/index\";\r\nimport IndexStyle from \"./style/index.module.css\";\r\nimport PostItem from \"components/index/postItem\";\r\nimport Seo from \"components/global/seo\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    renderPostItem(data) {\r\n        const { id, ...other } = data;\r\n\r\n        return <li key={ id }><PostItem data={ other } /></li>;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            data: {\r\n                allMarkdownRemark: {\r\n                    edges\r\n                },\r\n                site: {\r\n                    siteMetadata: {\r\n                        description\r\n                    }\r\n                }\r\n            },\r\n            pageContext\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={ IndexStyle.index }>\r\n                <Seo\r\n                    title={\r\n                        pageContext.humanPageNumber === 1\r\n                            ? undefined\r\n                            : `第${pageContext.humanPageNumber}页`\r\n                    }\r\n                >\r\n                    <meta name=\"description\" content={ description } />\r\n                </Seo>\r\n\r\n                <ol>\r\n                    { edges.map((postData) => this.renderPostItem(postData.node)) }\r\n                </ol>\r\n                <Pagination\r\n                    total={ pageContext.numberOfPages * pageContext.limit }\r\n                    current={ pageContext.humanPageNumber }\r\n                    pageSize={ pageContext.limit }\r\n                    className={ IndexStyle.pagination }\r\n                    onChange={ (current) => {\r\n                        if (current === 1) {\r\n                            navigate(\"/\");\r\n                            return;\r\n                        }\r\n\r\n                        navigate(`/page/${current}`);\r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    data: PropTypes.object,\r\n    pageContext: PropTypes.object\r\n};\r\n\r\nexport const query = graphql`\r\n    query indexQuery($skip: Int!, $limit: Int!) {\r\n        allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, filter: {fileAbsolutePath: {regex: \"/(?<!about)\\\\.md$/\"}}, skip: $skip, limit: $limit) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    timeToRead\r\n                    excerpt(format: HTML)\r\n                    frontmatter {\r\n                        date\r\n                        tags\r\n                        title\r\n                        update\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        } \r\n        site {\r\n            siteMetadata {\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}