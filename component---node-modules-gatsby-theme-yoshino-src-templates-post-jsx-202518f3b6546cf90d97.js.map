{"version":3,"sources":["webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/postHead/postInfo/time.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/postHead/postInfo.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/postHead/style/postInfo.module.css","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/postHead.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/style/postHead.module.css","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/post/comment/disqus.js","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/post/comment.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/post/postNav.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/drag.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/components/global/style/drag.module.css","webpack://blog/./node_modules/gatsby-theme-yoshino/src/templates/post.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/templates/style/post.module.css"],"names":["dateToString","date","time","Date","getFullYear","getMonth","getDate","Time","props","update","path","dateTime","itemProp","PostInfo","info","timeToRead","tags","className","map","tag","index","key","to","undefined","PostHead","title","JSON","stringify","elementId","loadDisqusJs","siteId","errorCallback","d","document","s","createElement","src","async","onerror","setAttribute","head","body","appendChild","showError","getElementById","innerHTML","e","console","warn","reset","window","DISQUS","reload","config","page","url","location","href","identifier","pathname","load","disqus_config","this","accessDisqus","destroy","Comment","commentConfig","useStaticQuery","site","siteMetadata","comment","postTitle","type","id","commentIndex","useEffect","PostNav","navHtml","dangerouslySetInnerHTML","__html","drag","children","style","clickRef","useRef","moveRef","useState","dragging","setDragging","x","y","refXY","setRefXY","moveXY","setMoveXY","onMouseDown","clickElem","current","moveElem","target","moveElemRect","getBoundingClientRect","clientX","left","clientY","top","handleMouseDown","addEventListener","removeEventListener","onMouseMove","handleMouseMove","onMouseUp","handleMouseUp","ReactDOM","ref","Object","assign","padding","propTypes","PropTypes","Post","data","markdownRemark","frontmatter","excerpt","html","initPostNav","destroyPostNav","PostStyle","name","content","property","postCard","post"],"mappings":"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","file":"component---node-modules-gatsby-theme-yoshino-src-templates-post-jsx-202518f3b6546cf90d97.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"../../icon\";\r\n\r\nfunction dateToString(date) {\r\n    const time = new Date( date );\r\n    const y = time.getFullYear();\r\n    const m = time.getMonth() + 1;\r\n    const d = time.getDate();\r\n    return `${y}-${m}-${d}`;\r\n}\r\n\r\nexport default function Time(props) {\r\n    const { date, update } = props.time;\r\n    return (\r\n        <React.Fragment>\r\n            <span>\r\n                <Icon path={\"/md/today\"} />{\" 发表于 \"}\r\n                <time dateTime={ date } itemProp=\"dateCreated datePublished\">{ dateToString(date) }</time>\r\n            </span>|\r\n\r\n            {update && \r\n                <span>\r\n                    <Icon path={\"/md/update\"} />{\" 更新于 \"}\r\n                    <time dateTime={ update } itemProp=\"dateModified\">{ dateToString(update) }</time>\r\n                </span>\r\n            }\r\n\r\n            {update && \"|\"}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTime.propTypes = {\r\n    time: PropTypes.shape({\r\n        date: PropTypes.string,\r\n        update: PropTypes.string\r\n    }) \r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"gatsby\";\r\nimport Time from \"./postInfo/time\";\r\nimport * as PostInfoStyle from \"./style/postInfo.module.css\";\r\n\r\nexport default function PostInfo(props) {\r\n\r\n    const { date, update, timeToRead, tags } = props.info;\r\n\r\n    function renderTagLinks() {\r\n        if (tags == null) { return \"null\"; }\r\n        return tags.map(\r\n            (tag, index) => (\r\n                <React.Fragment key={ tag }>\r\n                    <Link to={`/tag/${ tag }`}>{ tag }</Link> \r\n                    { tags[index + 1] === undefined ? \"\" : \", \" }\r\n                </React.Fragment>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={ PostInfoStyle.postInfo }>\r\n            <Time time={ { date, update } } />\r\n            <span>{ `预计阅读时长: ${timeToRead} 分钟` }</span>\r\n            |<span>{ \"标签: \" } { renderTagLinks() }</span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPostInfo.propTypes = {\r\n    info: PropTypes.shape({\r\n        date: PropTypes.string.isRequired,\r\n        update: PropTypes.string,\r\n        timeToRead: PropTypes.number.isRequired,\r\n        tags: PropTypes.arrayOf(PropTypes.string),\r\n    })\r\n};","// extracted by mini-css-extract-plugin\nexport var postInfo = \"postInfo-module--post-info--3v5BP\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as PostHeadStyle from \"./style/postHead.module.css\";\r\nimport PostInfo from \"./postHead/postInfo\";\r\n\r\nexport default function PostHead(props) {\r\n    const { title, ...info } = props.info;\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={ PostHeadStyle.title } >{ title }</h2>\r\n            { JSON.stringify(info) !== \"{}\"  && <PostInfo info={ info } />}\r\n        </div>\r\n    );\r\n}\r\n\r\nPostHead.propTypes = {\r\n    info: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        date: PropTypes.string,\r\n        update: PropTypes.string,\r\n        timeToRead: PropTypes.number,\r\n        tags: PropTypes.arrayOf(PropTypes.string),\r\n    })\r\n};","// extracted by mini-css-extract-plugin\nexport var title = \"postHead-module--title--2tgEC\";","export const elementId = \"disqus_thread\";\n\nasync function loadDisqusJs(siteId, errorCallback) {\n    const d = document, s = d.createElement(\"script\");\n    s.src = `//${siteId}.disqus.com/embed.js`;\n    s.async = true;\n    s.onerror = errorCallback;\n    s.setAttribute(\"data-timestamp\", + new Date());\n    (d.head || d.body).appendChild(s);\n}\n\nasync function showError() {\n    try {\n        const disqusDom = document.getElementById(elementId);\n        disqusDom.innerHTML = \"Disqus加载失败, 请检查您的地区是否支持Disqus\";\n    } catch (e) {\n        console.warn(e);\n    }\n}\n\nfunction reset(title) {\n    document.getElementById(elementId).innerHTML = \"\";\n\n    window.DISQUS.reset({\n        reload: true,\n        config: () => {\n            this.page.url = window.location.href;\n            this.page.identifier = window.location.pathname;\n            this.page.title = title;\n        }\n    });\n}\n\nexport async function load(siteId, title) {\n\n    window.disqus_config = function () {\n        this.page.url = window.location.href;\n        this.page.identifier = window.location.pathname;\n        this.page.title = title;\n    };\n\n    if (window.DISQUS === undefined) {\n        window.accessDisqus = true;\n        loadDisqusJs(siteId, (e) => {\n            showError();\n            window.DISQUS = false;\n            window.accessDisqus = false;\n            console.warn(e);\n        });\n    } else {\n\n        if (!window.accessDisqus) {\n            showError();\n            return false;\n        }\n\n        reset(title);\n\n    }\n}\n\nexport function destroy() { }\n\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport * as commentIndex from \"./comment/index\";\r\n\r\nexport default function Comment(props) {\r\n    const { site: { siteMetadata: { comment: commentConfig } } } = useStaticQuery(\r\n        graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        comment {\r\n                            type\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }`\r\n    );\r\n\r\n    const { postTitle } = props;\r\n    const { type, id: siteId } = commentConfig;\r\n    const comment = commentIndex[type];\r\n    if ( comment === undefined ) { return `error: no found ${type}`;}\r\n    \r\n    useEffect(() => {\r\n        comment.load(siteId, postTitle);\r\n        return comment.destroy;\r\n    }, []);\r\n\r\n    return (\r\n        <div id={comment.elementId}>\r\n            <div> loading...</div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nComment.propTypes = { \r\n    postTitle: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style/postNav.module.css\";\r\n\r\nexport default function PostNav(props) {\r\n    const { navHtml } = props;\r\n\r\n    return (\r\n        <div className={ \"toc-wrap\" }>\r\n            <ol\r\n                className={\"nav\"}\r\n                dangerouslySetInnerHTML={ { __html: navHtml } }\r\n            ></ol>\r\n        </div>);\r\n}\r\n\r\nPostNav.propTypes = {\r\n    navHtml: PropTypes.string\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as DragStyle from \"./style/drag.module.css\";\r\n\r\nfunction handleMouseDown(e, clickRef, moveRef, setDragging, setRefXY) {\r\n    const clickElem = clickRef.current;\r\n    const moveElem = moveRef.current;\r\n\r\n    if (e.target == clickElem) {\r\n        const refXY = {};\r\n        const moveElemRect = moveElem.getBoundingClientRect();\r\n        refXY.x = e.clientX - moveElemRect.left;\r\n        refXY.y = e.clientY - moveElemRect.top;\r\n        //console.log(`${moveElemRect.left}  ${ moveElemRect.top }`);\r\n        //console.log(refXY);\r\n        //console.log(refXY);\r\n        setRefXY(refXY);\r\n        setDragging(true);\r\n    }\r\n\r\n}\r\n\r\nfunction handleMouseMove(e, dragging, refXY, setMoveXY) {\r\n    if (dragging) {\r\n        const moveXY = {};\r\n        moveXY.x = e.clientX - refXY.x;\r\n        moveXY.y = e.clientY - refXY.y;\r\n        //console.log(\"move  client\");\r\n        //console.log(moveXY);\r\n        //console.log({x:e.clientX, y: e.clientY});\r\n        setMoveXY(moveXY);\r\n    }\r\n}\r\n\r\nfunction handleMouseUp(setDragging) {\r\n    setDragging(false);\r\n}\r\n\r\nexport default function drag(props) {\r\n    const { children, style, title } = props;\r\n    const clickRef = useRef(null);\r\n    const moveRef = useRef(null);\r\n\r\n    const [dragging, setDragging] = useState(false);\r\n    const [refXY, setRefXY] = useState({ x: 0, y: 0 });\r\n    const [moveXY, setMoveXY] = useState({ x: undefined, y: undefined });\r\n\r\n    useEffect(() => {\r\n        const onMouseDown = (e) => handleMouseDown(e, clickRef, moveRef, setDragging, setRefXY);\r\n        document.addEventListener(\"mousedown\", onMouseDown);\r\n\r\n        return () => document.removeEventListener(\"mousedown\", onMouseDown);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const onMouseMove = (e) => handleMouseMove(e, dragging, refXY, setMoveXY);\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        return () => document.removeEventListener(\"mousemove\", onMouseMove);\r\n    }, [dragging]);\r\n\r\n    useEffect(() => {\r\n        const onMouseUp = () => handleMouseUp(setDragging);\r\n        document.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n        return () => document.removeEventListener(\"mouseup\", onMouseUp);\r\n    }, []);\r\n\r\n    const portal = typeof window !== \"undefined\"\r\n        ? ReactDOM.createPortal((\r\n            <div\r\n                ref={ moveRef }\r\n                className={ DragStyle.drag }\r\n                style={ Object.assign({}, { left: moveXY.x, top: moveXY.y, padding: \"8px\" }, style) }\r\n            >\r\n                <div ref={ clickRef } className={ DragStyle.title } >{ title }</div>\r\n                <div className={ \"divider\" }></div>\r\n                { children }\r\n            </div>), document.body)\r\n        : \"\";\r\n\r\n    return portal;\r\n}\r\n\r\ndrag.propTypes = {\r\n    title: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n};","// extracted by mini-css-extract-plugin\nexport var drag = \"drag-module--drag--2rkNg\";\nexport var title = \"drag-module--title--1ckBs\";","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as PostStyle from \"./style/post.module.css\";\nimport PostHead from \"components/global/postHead\";\nimport PostNav from \"components/post/postNav\";\nimport Comment from \"components/post/comment\";\nimport Drag from \"components/global/drag\";\nimport Seo from \"components/global/seo\";\nimport { graphql } from \"gatsby\";\n\nexport default function Post(props) {\n    const {\n        markdownRemark: {\n            frontmatter,\n            timeToRead,\n            excerpt,\n            navHtml,\n            html\n        }\n    } = props.data;\n\n    frontmatter.timeToRead = timeToRead;\n\n    useEffect(() => {\n        window.initPostNav();\n        return () => window.destroyPostNav();\n    });\n\n    return (\n        <div className={ PostStyle.postCard }>\n            <Seo title={ frontmatter.title } >\n                <meta name=\"description\" content={ excerpt } />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:description\" content={ excerpt } />\n            </Seo>\n\n\n            <div className={ PostStyle.post }>\n                <PostHead info={ frontmatter } />\n                { navHtml != null &&\n                        <Drag title={ \"文章目录\" }>\n                            <PostNav navHtml={ navHtml } />\n                        </Drag>\n                }\n                <div className={ \"post-body\" } dangerouslySetInnerHTML={ { __html: html } }></div>\n            </div>\n\n\n            <div className={ PostStyle.comment }>\n                <Comment postTitle={ frontmatter.title } />\n            </div>\n        </div>\n    );\n}\n\nPost.propTypes = {\n    data: PropTypes.object\n};\n\nexport const query = graphql`\n    query postQuery($id: String!) {\n        markdownRemark(id: {eq: $id}) {\n            frontmatter {\n                date\n                tags\n                title\n                update\n            }\n            timeToRead\n            navHtml\n            excerpt\n            html\n        }\n    }\n`;\n","// extracted by mini-css-extract-plugin\nexport var postCard = \"post-module--post-card--AAnsR\";\nexport var post = \"post-module--post--34YDX\";\nexport var comment = \"post-module--comment--2LekW\";"],"sourceRoot":""}