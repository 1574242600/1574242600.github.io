{"version":3,"sources":["webpack://blog/./node_modules/gatsby-theme-yoshino/src/pages/archives.jsx","webpack://blog/./node_modules/gatsby-theme-yoshino/src/pages/style/archives.module.css"],"names":["Archives","props","dateToString","date","getMonth","getDate","toYearKey","edges","result","forEach","node","year","Date","frontmatter","getFullYear","undefined","push","renderTimeLine","data","yearIndex","Object","keys","reverse","map","key","id","title","slug","fields","dateTime","to","render","this","allMarkdownRemark","className","React"],"mappings":"0LAMqBA,E,YACjB,WAAaC,GAAQ,OACjB,YAAMA,IADU,M,uCAIpBC,aAAA,SAAaC,GACT,OAAUA,EAAKC,WAAa,EAA5B,IAAiCD,EAAKE,W,EAG1CC,UAAA,SAAUC,GACN,IAAMC,EAAS,GASf,OAPAD,EAAME,SAAQ,YAAe,IAAZC,EAAW,EAAXA,KAEPC,EADO,IAAIC,KAAKF,EAAKG,YAAYV,MACrBW,mBACGC,IAAjBP,EAAOG,KAAuBH,EAAOG,GAAQ,IACjDH,EAAOG,GAAMK,KAAKN,MAGfF,G,EAGXS,eAAA,SAAeC,GAAO,IAAD,OACXC,EAAYC,OAAOC,KAAKH,GAAMI,UAEpC,OACI,0BACMH,EAAUI,KAAI,SAACZ,GACb,OACI,sBAAIa,IAAMb,GACN,0BAAMA,GACN,0BACMO,EAAKP,GAAMY,KAAI,SAACb,GACd,IAAQe,EAAuDf,EAAvDe,GAAR,EAA+Df,EAAnDG,YAAea,EAA3B,EAA2BA,MAAOvB,EAAlC,EAAkCA,KAAkBwB,EAAWjB,EAArBkB,OAAUD,KACpD,OACI,sBAAIH,IAAMC,GACN,wBAAMI,SAAW1B,GAAS,EAAKD,aAAa,IAAIU,KAAKT,KACrD,gBAAC,KAAD,CAAM2B,GAAKH,GAASD,c,EAY5DK,OAAA,WACI,IAAMxB,EAAQyB,KAAK/B,MAAMiB,KAAKe,kBAAkB1B,MAEhD,OACI,uBAAK2B,UC1DS,yCD2DV,gBAAC,IAAD,CAAKR,MAAQ,OAEb,gCACA,uBAAKQ,UC7DK,yCD8DJF,KAAKf,eAAee,KAAK1B,UAAUC,O,GA1DnB4B","file":"component---node-modules-gatsby-theme-yoshino-src-pages-archives-jsx-538c6c7a7fea46272f63.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport * as ArchivesStyle from \"./style/archives.module.css\";\r\nimport Seo from \"components/global/seo\";\r\n\r\nexport default class Archives extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    dateToString(date) {\r\n        return `${date.getMonth() + 1}-${date.getDate()}`;\r\n    }\r\n\r\n    toYearKey(edges) {\r\n        const result = {};\r\n\r\n        edges.forEach(({ node }) => {\r\n            const date = new Date(node.frontmatter.date);\r\n            const year = date.getFullYear();\r\n            if (result[year] === undefined) { result[year] = []; }\r\n            result[year].push(node);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTimeLine(data) {\r\n        const yearIndex = Object.keys(data).reverse();\r\n\r\n        return (\r\n            <ul>\r\n                { yearIndex.map((year) => {\r\n                    return (\r\n                        <li key={ year }>\r\n                            <h3>{ year }</h3>\r\n                            <ul>\r\n                                { data[year].map((node) => {\r\n                                    const { id, frontmatter: { title, date }, fields: { slug } } = node;\r\n                                    return (\r\n                                        <li key={ id }>\r\n                                            <time dateTime={ date }>{ this.dateToString(new Date(date)) }</time>\r\n                                            <Link to={ slug }>{ title }</Link>\r\n                                        </li>\r\n                                    );\r\n                                }) }\r\n                            </ul>\r\n                        </li>\r\n                    );\r\n                }) }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const edges = this.props.data.allMarkdownRemark.edges;\r\n\r\n        return (\r\n            <div className={ ArchivesStyle.archivesCard }>\r\n                <Seo title={ \"归档\" } >\r\n                </Seo>\r\n                <h1>归档</h1>\r\n                <div className={ ArchivesStyle.archivesList }>\r\n                    { this.renderTimeLine(this.toYearKey(edges)) }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nArchives.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport const query = graphql`\r\n    query archivesQuery{\r\n        allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC} filter: {fileAbsolutePath: {regex: \"/(?<!about)\\\\.md$/\"}}) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter { \r\n                        title\r\n                        date\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","// extracted by mini-css-extract-plugin\nexport var archivesCard = \"archives-module--archives-card--2Z37N\";\nexport var archivesList = \"archives-module--archives-list--AKc4Y\";"],"sourceRoot":""}