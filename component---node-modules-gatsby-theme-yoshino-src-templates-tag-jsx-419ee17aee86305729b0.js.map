{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-yoshino/src/templates/tag.jsx"],"names":["TagIndex","renderPostItem","data","id","other","key","render","this","props","edges","allMarkdownRemark","pageContext","className","IndexStyle","index","title","tag","humanPageNumber","tagName","map","postData","node","total","numberOfPages","limit","current","pageSize","pagination","onChange","navigate","React","Component"],"mappings":"mQAQqBA,E,0GAEjBC,eAAA,SAAeC,GAAO,IACVC,EAAiBD,EAAjBC,GAAOC,EADE,YACQF,EADR,QAGjB,OAAO,wBAAIG,IAAMF,GAAK,kBAAC,IAAD,CAAUD,KAAOE,M,EAG3CE,OAAA,WAAU,IAAD,SAQDC,KAAKC,MAJGC,EAJP,EAEDP,KACIQ,kBACID,MAGRE,EAPC,EAODA,YAGJ,OACI,yBAAKC,UAAYC,IAAWC,OACxB,kBAAC,IAAD,CACIC,MAAK,OAAUJ,EAAYK,IAAtB,KAA+BL,EAAYM,gBAA3C,MAIT,yBAAKL,UAAYC,IAAWK,SAA5B,OAA4CP,EAAYK,KAExD,4BACMP,EAAMU,KAAI,SAACC,GAAD,OAAc,EAAKnB,eAAemB,EAASC,UAG3D,kBAAC,IAAD,CACIC,MAAQX,EAAYY,cAAgBZ,EAAYa,MAChDC,QAAUd,EAAYM,gBACtBS,SAAWf,EAAYa,MACvBZ,UAAYC,IAAWc,WACvBC,SAAW,SAACH,GACQ,IAAZA,EAKJI,YAAS,IAAKlB,EAAYK,IAAlB,IAA2BS,GAJ/BI,YAAS,U,GAtCCC,IAAMC","file":"component---node-modules-gatsby-theme-yoshino-src-templates-tag-jsx-419ee17aee86305729b0.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, navigate } from \"gatsby\";\r\nimport Pagination from \"yoshino/lib/Pagination/index\";\r\nimport IndexStyle from \"./style/index.module.css\";\r\nimport PostItem from \"components/index/postItem\";\r\nimport Seo from \"components/global/seo\";\r\n\r\nexport default class TagIndex extends React.Component {\r\n\r\n    renderPostItem(data) {\r\n        const { id, ...other } = data;\r\n\r\n        return <li key={ id }><PostItem data={ other }/></li>;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            data: {\r\n                allMarkdownRemark: {\r\n                    edges\r\n                }\r\n            },\r\n            pageContext,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={ IndexStyle.index }>\r\n                <Seo\r\n                    title={`标签: ${ pageContext.tag } 第${pageContext.humanPageNumber}页`}\r\n                >\r\n                </Seo>\r\n\r\n                <div className={ IndexStyle.tagName }>标签： { pageContext.tag }</div>\r\n\r\n                <ol > \r\n                    { edges.map((postData) => this.renderPostItem(postData.node)) }\r\n                </ol>\r\n\r\n                <Pagination\r\n                    total={ pageContext.numberOfPages * pageContext.limit }\r\n                    current={ pageContext.humanPageNumber }\r\n                    pageSize={ pageContext.limit }\r\n                    className={ IndexStyle.pagination }\r\n                    onChange={ (current) => {\r\n                        if (current === 1) {\r\n                            navigate(\"/\");\r\n                            return;\r\n                        }\r\n\r\n                        navigate(`/${ pageContext.tag }/${ current }`);\r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTagIndex.propTypes = {\r\n    tag: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pageContext: PropTypes.object\r\n};\r\n\r\nexport const query = graphql`\r\n    query tagIndexQuery($skip: Int!, $limit: Int!, $tag: String!) {\r\n        allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, skip: $skip, limit: $limit, filter: {frontmatter: {tags: {eq: $tag}}}) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    timeToRead\r\n                    excerpt(format: HTML)\r\n                    frontmatter {\r\n                        date\r\n                        tags\r\n                        title\r\n                        update\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        } \r\n    }\r\n`;"],"sourceRoot":""}